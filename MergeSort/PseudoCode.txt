void mergeSortHelper(int[] array)
	if (array.length > 1)
		mergeSortSplitRec(array, new int[array.length] ,0 , array.length-1)

void mergeSortSplitRec(int[] array, int[] temp, int left, int right)
	if (left < right)
		int mid = (left + right) / 2;
		mergeSortSplitRec(array, temp, left, mid);
		mergeSortSplitRec(array, temp, mid+1, right);
		mergeSortMerge(array, temp, left, mid, mid+1, right);


void mergeSortMerge(int[] array, int[] temp, int left, int leftEnd, int right, int rightEnd)
	int index = left;
	int size = rightEnd - left + 1;

	while(left <= leftEnd && right <= rightEnd)
		if (array[left] <= array[right])
			temp[index++] = array[left++];
		else
			temp[index++] = array[right++];

	while(left <= leftEnd)
		temp[index++] = array[left++];

	while(right <= rightEnd)
		temp[index++] = array[right++];

	for (int i = 0; i < size; ++i, --rightEnd)
		array[rightEnd] = temp[rightEnd];
